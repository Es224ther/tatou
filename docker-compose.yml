services:
  server:
    env_file:
      - .env
    build:
      context: server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - user-files:/app/storage
      - ./deploy/secrets:/app/flags
      - ./deploy/secrets/clients:/app/secrets/clients:ro
      - ./deploy/secrets/server:/app/secrets/server:ro
      - ./logs:/app/logs
      - ./flag_backups:/app/flag_backups
      - ./server/ops:/app/server/ops
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    environment:
      - PYTHONUNBUFFERED=1
      # DB connection details for future use by the API
      - DB_HOST=db
      - DB_PORT=3306
      - DB_NAME=tatou
      - DB_USER=${MARIADB_USER}
      - DB_PASSWORD=${MARIADB_PASSWORD}
      - RMAP_SERVER_PRIVATE=/app/secrets/server/server_priv.asc
      - RMAP_SERVER_PUBLIC=/app/secrets/server/server_pub.asc
      - RMAP_CLIENT_KEYS_DIR=/app/secrets/clients
      - APP_LOG_FILE=/app/logs/app.log
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: mariadb:11.4
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=tatou
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
      - ./db/tatou.sql:/docker-entrypoint-initdb.d/10-tatou.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h 127.0.0.1 -u root --password=$MARIADB_ROOT_PASSWORD --silent"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin:5.2
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
      - UPLOAD_LIMIT=64M     # <-- use a unit and quote if using YAML key:value form
      - MEMORY_LIMIT=256M
    ports:
      - "8080:80"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  db-data:
  user-files:
